.img-center img {
	display: block !important;
	margin-left: auto !important;
	margin-right: auto !important;
}

.img-no-center img {
	display: inline !important;
	margin: initial !important;
}

/* MIT License | Copyright (c) Stephan Ango (@kepano) 

Image Grid snippet for Obsidian

author: @kepano
version: 4.0.0

Support my work:
https://github.com/sponsors/kepano

*/
/* Revamped for Obsidian 1.1.9+ using :has() */
body {
	--image-grid-fit: cover;
	--image-grid-background: transparent;
	--img-grid-gap: 0.5rem;
}

@media (max-width: 400pt) {
	body {
		--img-grid-gap: 0.25rem;
	}
}
.img-grid-ratio {
	--image-grid-fit: contain;
}

.img-grid-ratio {
	--image-grid-fit: contain;
}

.img-grid .image-embed.is-loaded {
	line-height: 0;
	display: flex;
	align-items: stretch;
}
.img-grid .image-embed.is-loaded img {
	background-color: var(--image-grid-background);
}
.img-grid .image-embed.is-loaded img:active {
	background-color: transparent;
}
.img-grid .markdown-preview-section > div:has(img) p:empty,
.img-grid .markdown-preview-section > div:has(img) img ~ br,
.img-grid .markdown-preview-section > div:has(img) .image-embed ~ br {
	display: none;
}
.img-grid .markdown-preview-section div:has(> .image-embed ~ .image-embed),
.img-grid .markdown-preview-section p:has(> .image-embed ~ .image-embed),
.img-grid .markdown-preview-section div:has(> img ~ img),
.img-grid .markdown-preview-section p:has(> .image-embed ~ img),
.img-grid .markdown-preview-section p:has(> img ~ .image-embed),
.img-grid .markdown-preview-section p:has(> img ~ img) {
	display: grid;
	margin-block-start: var(--img-grid-gap);
	margin-block-end: var(--img-grid-gap);
	grid-column-gap: var(--img-grid-gap);
	grid-row-gap: 0;
	grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}
.img-grid
	.markdown-preview-section
	div:has(> .image-embed ~ .image-embed)
	> img,
.img-grid .markdown-preview-section p:has(> .image-embed ~ .image-embed) > img,
.img-grid .markdown-preview-section div:has(> img ~ img) > img,
.img-grid .markdown-preview-section p:has(> .image-embed ~ img) > img,
.img-grid .markdown-preview-section p:has(> img ~ .image-embed) > img,
.img-grid .markdown-preview-section p:has(> img ~ img) > img {
	object-fit: var(--image-grid-fit);
	align-self: stretch;
}
.img-grid
	.markdown-preview-section
	div:has(> .image-embed ~ .image-embed)
	> .internal-embed
	img,
.img-grid
	.markdown-preview-section
	p:has(> .image-embed ~ .image-embed)
	> .internal-embed
	img,
.img-grid .markdown-preview-section div:has(> img ~ img) > .internal-embed img,
.img-grid
	.markdown-preview-section
	p:has(> .image-embed ~ img)
	> .internal-embed
	img,
.img-grid
	.markdown-preview-section
	p:has(> img ~ .image-embed)
	> .internal-embed
	img,
.img-grid .markdown-preview-section p:has(> img ~ img) > .internal-embed img {
	object-fit: var(--image-grid-fit);
	align-self: center;
}
.img-grid .markdown-preview-section > div:has(img) > p {
	display: grid;
	margin-block-start: var(--img-grid-gap);
	margin-block-end: var(--img-grid-gap);
	grid-column-gap: var(--img-grid-gap);
	grid-row-gap: 0;
	grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}
.img-grid .markdown-preview-section > div:has(img) > p > br {
	display: none;
}
